# Generated by Django 3.2.15 on 2024-07-31 14:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('autenticacao', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carousel_Index',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=64, verbose_name='Nome para identificação ou para texto alternativo')),
                ('image', models.ImageField(null=True, upload_to='carousel_index/', verbose_name='Imagem 987x394')),
                ('url', models.CharField(blank=True, max_length=164, verbose_name='Url, caso tenha para redirecionar')),
                ('ativa', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClimaTempo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maxTemp', models.CharField(max_length=3, verbose_name='Temperatura máxima')),
                ('minTemp', models.CharField(max_length=3, verbose_name='Temperatura mínima')),
                ('madrugada', models.CharField(blank=True, max_length=50, verbose_name='Clima na madrugada')),
                ('manha', models.CharField(blank=True, max_length=50, verbose_name='Clima na manhã')),
                ('tarde', models.CharField(blank=True, max_length=50, verbose_name='Clima na tarde')),
                ('noite', models.CharField(blank=True, max_length=50, verbose_name='Clima na noite')),
                ('dt_inclusao', models.DateTimeField(auto_now_add=True, unique=True)),
            ],
            options={
                'verbose_name': 'Relatório',
                'verbose_name_plural': 'Relatórios de clima',
                'ordering': ['-dt_inclusao'],
            },
        ),
        migrations.CreateModel(
            name='Solicitacao_newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pessoa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='autenticacao.pessoa')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitacao_de_cadastro_de_camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('devidos_fins', models.BooleanField(default=False, verbose_name='Declaro para os devidos fins que meus equipamentos possuem as configurações mínimas descritas.')),
                ('autorizacao_de_imagem', models.CharField(choices=[('S', 'Sim, eu autorizo a exibição das imagens das câmeras disponibilizadas para transmissão AO VIVO nas Redes sociais da Central de Operações e Monitoramento - Nova Friburgo Cidade Inteligente'), ('N', 'Não, eu não autorizo a exibição das imagens das câmeras disponibilizadas para transmissão AO VIVO')], default='N', max_length=1, verbose_name='Autoriza a Central de Operações Nova Friburgo Cidade Inteligente a exibir as imagens captadas pelas câmeras disponibilizadas durante as transmissões ao vivo?')),
                ('tipo_camera', models.CharField(choices=[('CFTV', 'CFTV - Circuito Fechado de Televisão'), ('VDM', 'Videomonitoramento')], default='CFTV', max_length=4, verbose_name='Tipo de câmera')),
                ('n_cameras', models.IntegerField(default=1, verbose_name='Número de câmeras')),
                ('informacoes_de_acesso', models.CharField(choices=[('0', 'IP/DOMÍNIO'), ('1', 'Intelbras Cloud'), ('2', 'Meu equipamento NÃO É Intelbras')], default='0', max_length=1, verbose_name='Informações de acesso')),
                ('nao_eh_intelbrass', models.CharField(blank=True, max_length=64, verbose_name='Se não é Intelbras, qual a marca do seu equipamento?')),
                ('ip_ou_sn', models.CharField(max_length=64, verbose_name='IP/ Dominio ou (S/N) - Número de série pra acesso remoto')),
                ('atendido', models.BooleanField(default=False)),
                ('dt_inclusao', models.DateTimeField(auto_now_add=True)),
                ('pessoa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='autenticacao.pessoa')),
            ],
        ),
    ]
