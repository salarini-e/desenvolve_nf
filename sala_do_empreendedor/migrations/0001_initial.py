# Generated by Django 3.2.15 on 2024-07-31 14:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atividade', models.CharField(max_length=64, verbose_name='Atividade')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='AtividadeManual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj', models.CharField(max_length=18, unique=True, verbose_name='CNPJ')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome da empresa')),
                ('outra_atividade', models.CharField(blank=True, max_length=64, null=True, verbose_name='Outra atividade')),
                ('outro_ramo', models.CharField(blank=True, max_length=64, null=True, verbose_name='Outro ramo')),
                ('receber_noticias', models.BooleanField(default=False, verbose_name='Deseja receber notificações sobre compras da prefeitura?')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone de contato')),
                ('whatsapp', models.CharField(blank=True, max_length=15, null=True, verbose_name='Whatsapp da empresa')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail da empresa')),
                ('site', models.URLField(blank=True, null=True, verbose_name='Site da empresa')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição da empresa')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('validacao', models.BooleanField(default=False, verbose_name='Validação da empresa')),
                ('cadastrada_na_vitrine', models.BooleanField(default=False, verbose_name='Cadastrado na Vitrine Virtual?')),
                ('cadastrada_como_fornecedor', models.BooleanField(default=False, verbose_name='Cadastrado como fornecedor da prefeitura?')),
                ('atividade', models.ManyToManyField(to='sala_do_empreendedor.Atividade', verbose_name='Atividade')),
            ],
        ),
        migrations.CreateModel(
            name='Equipamentos_Faccao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do equipamento')),
            ],
        ),
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Razão social')),
                ('cnpj', models.CharField(max_length=18, unique=True, verbose_name='CNPJ')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('endereco', models.CharField(max_length=128, verbose_name='Endereço')),
                ('bairro', models.CharField(max_length=128, verbose_name='Bairro')),
                ('telefone', models.CharField(blank=True, max_length=128, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('ativa', models.BooleanField(default=False, verbose_name='Registro ativo ou validado?')),
                ('responsavel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsavel_escola', to=settings.AUTH_USER_MODEL, verbose_name='Responsável pelas compras')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_register_escola', to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Escolaridade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome da escolaridade')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Solicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do item')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade')),
                ('unidade', models.CharField(max_length=128, verbose_name='Unidade de medida')),
                ('descricao', models.TextField(verbose_name='Descrição')),
            ],
        ),
        migrations.CreateModel(
            name='Processo_Digital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('nv', 'Novo'), ('ae', 'Aguardando envio de documentos'), ('ar', 'Aguardando reenvio de documentos'), ('aa', 'Aguardando avaliação'), ('bs', 'Aguardando pagamento licença sanitária'), ('ba', 'Aguardando pagamento licença ambiental'), ('sa', 'Aguardando pagamento licença ambiental e licença ambiental'), ('ls', 'Aguardando emissão licença sanitária'), ('la', 'Aguardando emissão licença ambiental'), ('se', 'Licença sanitária emitida'), ('ae', 'Licença ambiental emitida'), ('bg', 'Boleto gerado'), ('cn', 'Concluído')], default='nv', max_length=2, verbose_name='Status')),
                ('n_protocolo', models.CharField(blank=True, max_length=128, null=True, verbose_name='Número do protocolo')),
                ('dt_solicitacao', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data de solicitação')),
                ('dt_atualizacao', models.DateTimeField(auto_now=True, null=True, verbose_name='Data de atualização')),
                ('solicitante', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
        ),
        migrations.CreateModel(
            name='Proposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qnt_itens_proposta', models.IntegerField(verbose_name='Quantidade de itens propostos')),
                ('previsao_entrega', models.IntegerField(default=0, verbose_name='Previsão de quantos dias para entrega após fechar o contrato?')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.empresa', verbose_name='Empresa')),
            ],
        ),
        migrations.CreateModel(
            name='Ramo_de_Atuacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ramo', models.CharField(max_length=164, verbose_name='Ramo de atuação')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Status_do_processo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Costura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Producao_Alimentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Producao_Bebidas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_produto_faccao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do produto')),
            ],
        ),
        migrations.CreateModel(
            name='Trabalho_Faccao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do trabalho')),
            ],
        ),
        migrations.CreateModel(
            name='Tipo_Processos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do processo')),
                ('descricao', models.TextField(verbose_name='Descrição do processo')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitacao_de_Compras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, null=True, unique=True)),
                ('status', models.CharField(choices=[('0', 'Criando solicitação'), ('1', 'Aguardando propostas'), ('2', 'Aguardando analise de propostas'), ('3', 'Aguardando aceite de contrato'), ('4', 'Aguardando entrega/serviço'), ('5', 'Aguardando efetuamento do pagamento'), ('6', 'Aguardando nota fiscal'), ('7', 'Aguardando avaliação de serviço'), ('8', 'Processo concluído')], default='0', max_length=1, verbose_name='Status da solicitacao')),
                ('tipo', models.CharField(choices=[('s', 'Serviço'), ('p', 'Produto')], max_length=1, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('dt_envio_propostas', models.DateField(verbose_name='Data limite para envio de propostas')),
                ('previsao_entrega', models.IntegerField(default=0, verbose_name='Previsão de quantos dias para entrega após fechar o contrato?')),
                ('qnt_itens', models.IntegerField(blank=True, null=True, verbose_name='Quantidade de itens solicitados')),
                ('dt_solicitacao', models.DateField(auto_now_add=True, verbose_name='Data de solicitação')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.escola', verbose_name='Escola')),
                ('proposta_vencedora', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.empresa', verbose_name='Empresa com proposta vencedora')),
                ('ramo_atuacao', models.ManyToManyField(blank=True, null=True, to='sala_do_empreendedor.Ramo_de_Atuacao', verbose_name='Enviar mensagem para as empresas com os seguintes ramos de atuação:')),
            ],
        ),
        migrations.CreateModel(
            name='RequerimentoISSQN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solicitacao', models.CharField(choices=[('r', 'Renovação'), ('i', 'Inscrição')], max_length=1, verbose_name='Tipo de solicitação')),
                ('razao_social', models.CharField(max_length=255, verbose_name='Razão social')),
                ('nome_fantasia', models.CharField(max_length=255, verbose_name='Nome fantasia')),
                ('cnpj', models.CharField(max_length=18, verbose_name='CNPJ')),
                ('inscricao_municipal', models.CharField(max_length=20, verbose_name='Inscrição municipal')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('email', models.EmailField(max_length=254)),
                ('telefone', models.CharField(max_length=20)),
                ('contador', models.CharField(max_length=255, verbose_name='Contador')),
                ('contador_email', models.EmailField(max_length=254, verbose_name='E-mail do contador')),
                ('contador_telefone', models.CharField(max_length=20, verbose_name='Telefone do contador')),
                ('boleto', models.FileField(blank=True, null=True, upload_to='processos/boleto/', verbose_name='Boleto')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('processo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.processo_digital', verbose_name='Processo')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Registro_no_vitrine_virtual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logo da empresa')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.empresa', verbose_name='Empresa')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Proposta_Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preco', models.IntegerField(verbose_name='Preço/Proposta')),
                ('item_solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.item_solicitacao', verbose_name='Item da compra')),
                ('proposta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.proposta', verbose_name='Proposta')),
            ],
        ),
        migrations.AddField(
            model_name='proposta',
            name='solicitacao_de_compra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.solicitacao_de_compras', verbose_name='Solicitação de compra'),
        ),
        migrations.CreateModel(
            name='Profissao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome da profissão')),
                ('licenca_sanitaria', models.BooleanField(default=False, verbose_name='Necessita licença sanitária?')),
                ('licenca_sanitaria_com_alvara', models.BooleanField(default=False, verbose_name='Quando com alvará necessita licença sanitária?')),
                ('licenca_ambiental', models.BooleanField(default=False, verbose_name='Necessita licença ambiental?')),
                ('escolaridade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.escolaridade', verbose_name='Escolaridade')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128, verbose_name='Nome do produto ou serviço')),
                ('descricao', models.TextField(verbose_name='Descrição do produto')),
                ('imagem', models.ImageField(upload_to='produtos/', verbose_name='Imagem do produto')),
                ('validacao_da_equipe', models.BooleanField(default=False, verbose_name='Validação da Sala do Empreendedor')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('rg_vitrine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.registro_no_vitrine_virtual', verbose_name='Registro da vitrine virtual')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.AddField(
            model_name='processo_digital',
            name='tipo_processo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.tipo_processos', verbose_name='Tipo de processo'),
        ),
        migrations.CreateModel(
            name='Porte_da_Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porte', models.CharField(max_length=32, verbose_name='Porte da empresa')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Novas_Oportunidades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=14, null=True, verbose_name='CPF')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone de contato/whatsapp')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail para contato')),
                ('renda_representacao', models.CharField(choices=[('toda_renda', 'Toda a minha renda.'), ('maior_parte', 'A maior parte da minha renda.'), ('menor_parte', 'A menor parte da minha renda.'), ('nao_comercializa', 'Ainda não atuo de forma comercial.')], max_length=20, verbose_name='2. Essa atividade manual representa:')),
                ('motivo_nao_comercializacao', models.CharField(choices=[('atuando_outra_area', 'Estou atuando profissionalmente em outra área'), ('nao_sei_empreender', 'Não sei como empreender, por isso tenho receio de não dar certo')], max_length=50, verbose_name='3. Se ainda não comercializa, qual o motivo?')),
                ('renda_mensal', models.CharField(choices=[('0', 'Até meio salário mínimo (até R$706,00 reais)'), ('1', 'De meio salário a 1 salário mínimo (de R$707,00 a R$1.412,00)'), ('2', 'De 1 a 2 salários mínimos (de R$1.413,00 a R$2.824,00)'), ('3', 'De 2 a 4 salários mínimos (de R$2.825,00 até R$5.648,00)'), ('4', 'De 4 a 7 salários mínimos (de r$4.649,00 até R$9.884,00)'), ('5', 'Acima de 7 salários mínimos (R$9.885,00 ou mais)'), ('6', 'Não sei ou prefiro não responder')], max_length=1, verbose_name='4. Qual é a sua renda mensal? (Inclua nesse cálculo a soma de dinheiro de todas as suas fontes de renda, como salários, produção manual, pensão de filhos, benefício temporário do governo, etc.)')),
                ('possui_empresa', models.CharField(choices=[('s', 'Sim'), ('n', 'Não')], max_length=1, verbose_name='5. Possui uma empresa ou MEI para venda dos seus produtos e atividades?')),
                ('comercializacao_produto', models.CharField(choices=[('casa_online', 'Em casa (vendo online)'), ('ponto_comercial', 'Possuo um ponto comercial fixo'), ('ponto_ambulante', 'Ponto fixo de ambulante'), ('ambulante_movel', 'Ambulante móvel'), ('feiras', 'Feiras'), ('expositor_outros', 'Expositor fixo em outros pontos comerciais')], max_length=30, verbose_name='6. Como você comercializa seus produtos? (marque todas as opções que se adequem a você)')),
                ('cep_negocio', models.CharField(max_length=9, verbose_name='7. Qual o CEP do seu negócio?')),
                ('alavancar_negocio', models.TextField(verbose_name='8. O que você acha que poderia ser feito para ajudar o seu negócio a alavancar?')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('atividade_manual', models.ManyToManyField(to='sala_do_empreendedor.AtividadeManual', verbose_name='1. Atualmente você desenvolve alguma atividade ou produção manual (pode assinalar quantas alternativas você achar necessário)?')),
                ('tipo_costura', models.ManyToManyField(blank=True, null=True, to='sala_do_empreendedor.Tipo_Costura', verbose_name='1. Qual tipo de costura?')),
                ('tipo_producao_alimentos', models.ManyToManyField(blank=True, null=True, to='sala_do_empreendedor.Tipo_Producao_Alimentos', verbose_name='1. Qual tipo de produção de alimentos?')),
                ('tipo_producao_bebidas', models.ManyToManyField(blank=True, null=True, to='sala_do_empreendedor.Tipo_Producao_Bebidas', verbose_name='1. Qual tipo de produção de bebidas?')),
                ('user_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Necessidades_das_Empresas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacitacao_empresarial', models.BooleanField(default=False, verbose_name='Capacitação empresarial')),
                ('capacitacao_profissional', models.BooleanField(default=False, verbose_name='Capacitação profissional')),
                ('credito', models.BooleanField(default=False, verbose_name='Crédito')),
                ('consultoria', models.BooleanField(default=False, verbose_name='Consultoria')),
                ('outro', models.BooleanField(default=False, verbose_name='Outro')),
                ('outro_descricao', models.CharField(blank=True, max_length=128, null=True, verbose_name='Qual outra necessidade?')),
                ('dt_inclusao', models.DateField(auto_now_add=True, verbose_name='Data de inclusão')),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.empresa', verbose_name='Empresa')),
                ('user_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.AddField(
            model_name='item_solicitacao',
            name='solicitacao_de_compra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.solicitacao_de_compras', verbose_name='Solicitação de compra'),
        ),
        migrations.CreateModel(
            name='Faccao_legal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('possui_mei', models.BooleanField(default=False, verbose_name='Possui MEI ou empresa de outro porte?')),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, verbose_name='CNPJ')),
                ('tempo_que_trabalha', models.CharField(choices=[('0', 'Menos de 1 ano'), ('1', 'De 1 a 3 anos'), ('2', 'Mais de 3 anos')], max_length=1, verbose_name='Trabalha com facção há quanto tempo')),
                ('area', models.CharField(choices=[('s', 'Sim'), ('n', 'Não')], max_length=1, verbose_name='Possui área de trabalho separada da residência?')),
                ('tamanho_area', models.CharField(choices=[('0', 'Menos de 6m²'), ('1', 'De 6 a 16m²'), ('2', 'De 16 a 50m²'), ('3', 'Mais de 50m²')], max_length=1, verbose_name='Qual o tamanho da área de trabalho?')),
                ('possui_colaboradores', models.BooleanField(default=False, verbose_name='Possui colaboradores?')),
                ('qtd_colaboradores', models.IntegerField(blank=True, null=True, verbose_name='Quantos colaboradores possui?')),
                ('outro_produto', models.CharField(blank=True, max_length=128, null=True, verbose_name='Produz outro produto? Caso sim, descreva:')),
                ('situacao_trabalho', models.CharField(choices=[('p', 'Pouco'), ('s', 'Suficiente'), ('d', 'Em demasia')], max_length=1, verbose_name='Geralmente, como está de trabalho?')),
                ('situacao_remuneracao', models.CharField(choices=[('bx', 'Baixo'), ('rg', 'Regular'), ('bo', 'Bom'), ('ot', 'Ótimo')], max_length=2, verbose_name='Como considera a renda que obtêm com seu trabalho?')),
                ('voce_prefere', models.CharField(choices=[('ccf', 'Continuar como faccionista.'), ('eec', 'Estar empregado em uma confecção.')], max_length=3, verbose_name='Você prefere:')),
                ('qual_seu_sonho_no_setor', models.TextField(blank=True, null=True, verbose_name='Qual seu sonho no setor?')),
                ('equipamentos', models.ManyToManyField(to='sala_do_empreendedor.Equipamentos_Faccao', verbose_name='Quais equipamentos possui?')),
                ('tipo_produto', models.ManyToManyField(to='sala_do_empreendedor.Tipo_produto_faccao', verbose_name='Que tipos de produtos produz?')),
                ('trabalha_com', models.ManyToManyField(null=True, to='sala_do_empreendedor.Trabalho_Faccao', verbose_name='Trabalha com:')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
        ),
        migrations.AddField(
            model_name='empresa',
            name='porte',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.porte_da_empresa', verbose_name='Porte da empresa'),
        ),
        migrations.AddField(
            model_name='empresa',
            name='ramo',
            field=models.ManyToManyField(to='sala_do_empreendedor.Ramo_de_Atuacao', verbose_name='Ramo de atuação'),
        ),
        migrations.AddField(
            model_name='empresa',
            name='user_register',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou'),
        ),
        migrations.CreateModel(
            name='DocumentosPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contrato_social', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='1. Contrato social ou última alteração contratual')),
                ('contrato_social_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status do contrato social')),
                ('carteira_orgao_classe', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='2. Carteira do órgão de classe (CREA, CRM, OAB, etc.)')),
                ('carteira_orgao_classe_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status da carteira do órgão de classe')),
                ('alvara_localizacao', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='3. Alvará de localização e funcionamento')),
                ('alvara_localizacao_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status do alvará de localização e funcionamento')),
                ('informacoes_cadastrais_dos_empregados', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='4. Informações cadastrais dos empregados (RAS/e-Social/SEFIP)')),
                ('informacoes_cadastrais_dos_empregados_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status das informações cadastrais dos empregados')),
                ('balanco_patrimonial', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='5. Balanço patrimonial compelto (último exercício), discriminado')),
                ('balanco_patrimonial_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status do balanço patrimonial')),
                ('dre', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='6. DRE completo (último exercício), discriminado')),
                ('dre_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status do DRE')),
                ('balancete_analitico', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='7. Balancete analítico completo (último exercício), discriminado')),
                ('balancete_analitico_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status do balancete analítico')),
                ('cnpj_copia', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='8. Cópia do CNPJ')),
                ('cnpj_copia_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status da cópia do CNPJ')),
                ('profissionais_habilitados', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='9. Relação dos profissionais habilitados (CREA, CRM, OAB, etc.)')),
                ('profissionais_habilitados_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status da relação dos profissionais habilitados')),
                ('ir_empresa', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='10. IR da empresa (último exercício), discriminado')),
                ('ir_empresa_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status do IR da empresa')),
                ('simples_nacional', models.FileField(upload_to='documentos/requerimento_issqn/', verbose_name='11. Simples nacional (último exercício), discriminado')),
                ('simples_nacional_status', models.CharField(choices=[('0', 'Aguardando avaliação'), ('1', 'Aprovado'), ('2', 'Reprovado'), ('3', 'Atualização requerida')], default='0', max_length=1, verbose_name='Status do simples nacional')),
                ('requerimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.requerimentoissqn', verbose_name='Requerimento')),
            ],
        ),
        migrations.CreateModel(
            name='Credito_Facil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj', models.CharField(max_length=18, null=True, verbose_name='CNPJ da empresa')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone de contato/whatsapp')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail para contato')),
                ('valor_desejado', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor desejado (R$)')),
                ('motivacao_emprestimo', models.CharField(choices=[('cg', 'Capital de Giro'), ('in', 'Investimento em equipamento/obra'), ('rf', 'Requilibrio financeiro'), ('ou', 'Outro')], max_length=2, verbose_name='Motivação do empréstimo')),
                ('outra_motivacao', models.CharField(blank=True, max_length=128, null=True, verbose_name='Qual outra motivação do emprestivo?')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Contrato_de_Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=128, verbose_name='Título')),
                ('proposito', models.TextField(verbose_name='Proposito')),
                ('aceito_pela_empresa', models.BooleanField(default=False, verbose_name='Contrato aceito pela empresa?')),
                ('hash', models.CharField(max_length=128, null=True, verbose_name='Hash do contrato')),
                ('nota_fiscal', models.FileField(null=True, upload_to='contratos_pdde/nota_fiscal/', verbose_name='Nota fiscal')),
                ('avaliacao', models.CharField(choices=[('0', 'Dentro da espectativa'), ('1', 'Acima da espectativa')], max_length=1, null=True, verbose_name='Avaliação do serviço')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('itens_solicitados', models.ManyToManyField(to='sala_do_empreendedor.Item_Solicitacao', verbose_name='Itens do contrato')),
                ('proposta_vencedora', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.proposta', verbose_name='Proposta')),
                ('propostas_itens', models.ManyToManyField(to='sala_do_empreendedor.Proposta_Item', verbose_name='Propostas dos itens')),
                ('solicitacao_referente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.solicitacao_de_compras', verbose_name='Solicitação de compra')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
        migrations.CreateModel(
            name='Andamento_Processo_Digital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('nv', 'Novo'), ('ae', 'Aguardando envio de documentos'), ('ar', 'Aguardando reenvio de documentos'), ('aa', 'Aguardando avaliação'), ('bs', 'Aguardando pagamento licença sanitária'), ('ba', 'Aguardando pagamento licença ambiental'), ('sa', 'Aguardando pagamento licença ambiental e licença ambiental'), ('ls', 'Aguardando emissão licença sanitária'), ('la', 'Aguardando emissão licença ambiental'), ('se', 'Licença ambiental sanitária'), ('ae', 'Licença ambiental emitida'), ('bg', 'Boleto gerado'), ('cn', 'Concluído')], default='nv', max_length=2, verbose_name='Status')),
                ('observacao', models.TextField(default='n/h', verbose_name='Mensagem')),
                ('dt_andamento', models.DateField(auto_now=True, verbose_name='Data de atualização')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sala_do_empreendedor.processo_digital', verbose_name='Processo')),
                ('servidor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Servidor')),
            ],
        ),
        migrations.CreateModel(
            name='Agente_Tributario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email para receber notificação de processo')),
                ('ativo', models.BooleanField(default=True)),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agente Tributário')),
            ],
        ),
        migrations.CreateModel(
            name='Agente_Sanitario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email para receber notificação de processo')),
                ('ativo', models.BooleanField(default=True)),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agente Sanitário')),
            ],
        ),
        migrations.CreateModel(
            name='Agente_Procuradoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email para receber notificação de processo')),
                ('ativo', models.BooleanField(default=True)),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agente Procurador')),
            ],
        ),
        migrations.CreateModel(
            name='Agente_Divida_Fiscal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email para receber notificação de processo')),
                ('ativo', models.BooleanField(default=True)),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agente Fiscal de Dívida')),
            ],
        ),
        migrations.CreateModel(
            name='Agente_Cartorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email para receber notificação de processo')),
                ('ativo', models.BooleanField(default=True)),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agente de Cartório')),
            ],
        ),
        migrations.CreateModel(
            name='Agente_Ambiental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email para receber notificação de processo')),
                ('ativo', models.BooleanField(default=True)),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Agente Ambiental')),
            ],
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt_register', models.DateField(auto_now_add=True, verbose_name='Data de cadastro')),
                ('pessoa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pessoa_adm', to=settings.AUTH_USER_MODEL, verbose_name='Pessoa')),
                ('processos_autorizados', models.ManyToManyField(to='sala_do_empreendedor.Tipo_Processos', verbose_name='Processos autorizados')),
                ('user_register', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_register_adm', to=settings.AUTH_USER_MODEL, verbose_name='Usuário que cadastrou')),
            ],
        ),
    ]
